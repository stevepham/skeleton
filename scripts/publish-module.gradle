apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION

                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }

                artifact androidSourcesJar
                //artifact javadocJar

                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = 'Skeleton library'
                    url = 'https://github.com/stevepham/skeleton'
                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'treatmaster'
                            name = 'Steve Pham'
                            email = 'treatmaster5277@gmail.com'
                        }
                    }

                    scm {
                        connection = 'scm:git:github.com/stevepham/skeleton.git'
                        developerConnection = 'scm:git:ssh://github.com/stevepham/skeleton.git'
                        url = 'https://github.com/stevepham/skeleton/tree/main'
                    }
                }
            }
        }
    }
}

signing {
    def keyId = findProperty("signing.keyId")
    def key = findProperty("signing.key")
    def password = findProperty("signing.password")

    useInMemoryPgpKeys(keyId, key, password)
    sign publishing.publications
}